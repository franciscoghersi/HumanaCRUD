@page "/patientDelete/{id}"
@using HumanaCRUD.Controller
@using HumanaCRUD.Data
@inject NavigationManager  NavigationManager

<h3>Patient Delete</h3>
<p style="color:red">You will delete that patient, Are you sure?</p>

<EditForm Model="@patient">
    <table>
        <tr>
            <td>Name: </td>
            <td><input type="text" @bind="@patient.Name.FirstOrDefault().Text" /></td>
        </tr>
        <tr>
            <td>Family: </td>
            <td><input type="text" @bind="patient.Name.FirstOrDefault().Family" /></td>
        </tr>
        <tr>
            <td>Gender: </td>
            <td><input type="text" @bind="patient.Gender" /></td>
        </tr>
        <tr>
            <td>Birth: </td>
            <td><input type="text" @bind="patient.BirthDate" /></td>
        </tr>
        <td colspan="2" style="text-align:center">
            <input type="submit" value="Delete" @onclick="DeletePatient" />
            <input type="button" value="Cancel" @onclick="CancelPatient" />
        </td>
    </table>


</EditForm>
@code {

    [Parameter]
    public string id { get; set; }

    Patient patient = new Patient();
    PatientController patientController = new PatientController();

    protected override async Task OnInitializedAsync()
    {
        patient.Name = new List<Name>();
        var name = new Name()
        {
            Family= "",
            Text = ""
        };
        patient.Name.Add(name);

        patient = await patientController.GetPatientAsync(id);
    }

    protected void CancelPatient()
    {
        NavigationManager.NavigateTo("/patientlist");
    }

    protected async void DeletePatient()
    {
        var a = await patientController.DeletePatientAsync(id);
        NavigationManager.NavigateTo("/patientlist");
    }
}
